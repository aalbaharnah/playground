import { useFrame, useLoader } from "@react-three/fiber";
import { THREE } from "expo-three";
import { useLayoutEffect, useMemo, useRef, useState } from "react";
import { MTLLoader } from "three/examples/jsm/loaders/MTLLoader";
import { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';
import { TextureLoader } from "expo-three";
import { MaterialLoader, ObjectLoader } from "three";
import { useAnimatedSensor, SensorType, useSharedValue, withSpring, SharedValue } from 'react-native-reanimated';
import { useGLTF } from "@react-three/drei";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/



import { GLTF } from "three/examples/jsm/loaders/GLTFLoader"

type GLTFResult = GLTF & {
    nodes: {
        character_bear: THREE.Mesh, character_bearArmLeft: THREE.Mesh, character_bearArmRight: THREE.Mesh, Cube1337: THREE.Mesh, Cube1337_1: THREE.Mesh

    }
    materials: {
        ['BrownDark.036']: THREE.MeshStandardMaterial, ['Black.025']: THREE.MeshStandardMaterial
    }
}


interface BearProps {
    scale: SharedValue<number>
    position: SharedValue<number>
}

export default function Bear(props: BearProps) {
    const ref = useRef<THREE.Group>();

    const [active, setActive] = useState(false);



    const { nodes, materials } = useGLTF('https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/bear/model.gltf') as unknown as GLTFResult


    useFrame((state, delta) => {

        ref.current?.scale.set(props.scale.value, props.scale.value, props.scale.value)

        state.camera.position.x += (0 - state.camera.position.x) * 0.1;
        state.camera.position.y += (1 - state.camera.position.y) * 0.1;
        state.camera.lookAt(0, 0, 0);
        ref.current?.rotateY(delta * 0.5)

        ref.current?.position.setY(props.position.value)

    })


    return (// @ts-ignore
        <group ref={ref} {...props} dispose={null}
            position={[0, 0, 0]}
        >
            <mesh geometry={nodes.character_bear.geometry} material={nodes.character_bear.material} rotation={[Math.PI / 2, 0, 0,]} >
                <mesh geometry={nodes.character_bearArmLeft.geometry} material={nodes.character_bearArmLeft.material} position={[0.2, 0, -0.63,]} />
                <mesh geometry={nodes.character_bearArmRight.geometry} material={nodes.character_bearArmRight.material} position={[-0.2, 0, -0.63,]} />
                <group position={[0, 0, -0.7,]} >
                    <mesh geometry={nodes.Cube1337.geometry} material={materials['Black.025']} />
                    <mesh geometry={nodes.Cube1337_1.geometry} material={nodes.Cube1337_1.material} />
                </group>
            </mesh>

        </group>
    )
}

useGLTF.preload('https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/bear/model.gltf')